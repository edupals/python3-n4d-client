#!/usr/bin/env python3

"""
    N4D Client

    N4D client cli

    Copyright (C) 2021  Enrique Medina Gremaldos <quiqueiii@gmail.com>

    This program is free software: you can redistribute it and/or modify it under
    the terms of the GNU General Public License as published by the Free Software
    Foundation, either version 3 of the License, or (at your option) any later
    version.

    This program is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along with
    this program. If not, see <http://www.gnu.org/licenses/>.
"""

import n4d.client

import os
import sys
import getpass
import time
import argparse
import json

def main():
    
    parser = argparse.ArgumentParser()
    parser.add_argument("-a", "--address", help="server address",default="https://127.0.0.1:9779")
    parser.add_argument("-u", "--user", help="user name")
    parser.add_argument("-p", "--password", help="user password")
    parser.add_argument("-i", "--interactive", help="interactive login",action="store_true")
    parser.add_argument("action",type=str)
    parser.add_argument("call",nargs='*',default="[]")
    args = parser.parse_args()
    
    cuser=args.user
    cpassword=args.password
    
    if (args.interactive):
        if (not cuser):
            cuser=getpass.getuser()
        
        print("user: %s"%(cuser),file=sys.stderr)
        cpassword=getpass.getpass("password: ")
    
    if (args.action=="call"):
        
        if (len(args.call)==0):
            sys.exit(1)
    
        tmp=args.call[0].split('.')
        print(tmp)
        plugin = None
        method = None
    
        if (len(tmp)==1):
            method=tmp[0]
        elif (len(tmp)==2):
            plugin=tmp[0]
            method=tmp[1]
        else:
            sys.exit(1)
    
        print(args.address)
        print(plugin)
        print(method)
        print(cuser)
    
        arguments=None
        if (len(args.call)>1):
            arguments=args.call[1]
        
        print(arguments)
        
        if (arguments):
            tmp = arguments.replace('\'','\"')
            data=json.loads(arguments)
            print(data)
        
        client = n4d.client.Client(args.address,user=cuser,password=cpassword)
        proxy = n4d.client.Proxy(client,plugin,method)
        result = proxy.call()
        print(result)
    
    if (args.action=="get-methods"):
        client = n4d.client.Client(args.address,user=cuser,password=cpassword)
        data=client.get_methods()
        
        rows=[]
        max_columns=0
        for p in data:
            
            for m in data[p]:
                columns=[]
                columns.append(p)
                columns.append(m)
                
                for pr in data[p][m]:
                    columns.append(pr)
                    columns.append(str(data[p][m][pr]))
                
                rows.append(columns)
                if (len(columns)>max_columns):
                    max_columns=len(columns)
        
        csizes=[0]*max_columns
        
        for r in rows:
            for n in range(len(r)):
                x=len(r[n])
                if (x>csizes[n]):
                    csizes[n]=x
                
        
        for row in rows:
            line=""
            for n in range(len(row)):
                col=row[n]
                line+=col
                spaces = csizes[n]-len(col)
                for s in range(spaces):
                    line+=" "
                line+="    "
                
            print(line)
        
        
    if (args.action=="validate-user"):
        client = n4d.client.Client(args.address,user=cuser,password=cpassword)
        try:
            data=client.validate_user()
            groups=""
            for g in data[1]:
                groups+=g+" "
            print(groups)
            
        except n4d.client.AuthenticationError as e:
            print("Failed")
            sys.exit(1)
            
        except Exception as e:
            sys.exit(1)
        
    sys.exit(0)

if __name__=="__main__":
    main()


